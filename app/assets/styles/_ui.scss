// Button
.btn-basic {
  $color: #333;
  $background: #f5f5f5;
  $border: #aaa;

  border-color: $border;
  border-bottom-color: darken($border, 5%);
  color: $color;
  background-color: $background;
  background-image: linear-gradient(to bottom, lighten($background, 4%), darken($background, 4%));
  background-repeat: repeat-x;
  box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.8), 0 1px 1px 0 rgba(0, 0, 0, 0.08);

  &:hover,
  &:focus,
  &:active,
  &.active {
    background-image: linear-gradient(to bottom, lighten($background, 2%), darken($background, 6%));
  }

  &:active,
  &.active {
    border-color: darken($border, 5%);
    background-image: linear-gradient(to bottom, darken($background, 6%), darken($background, 4%));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      opacity: 1;
      border-color: lighten($border, 15%);
      color: #aaa;
      background: $background;
    }
    .icon-processing {
      opacity: 0.5;
    }
  }
}

// Table
.table-basic {
  // @extend .table-striped;
  @extend .table-hover;
  table-layout: fixed;
  margin-bottom: 0;
  font-size: 12px;
  white-space: nowrap;
  .btn {
    margin-top: -3px;
    margin-bottom: -2px;
  }
  .form-control {
    margin-top: -2px;
    margin-bottom: -2px;
  }
  th,
  td {
    overflow: hidden;
    text-overflow: ellipsis;
  }
  > thead > tr > th {
    $background: #f5f5f5;
    position: relative;
    padding-top: 5px;
    padding-bottom: 5px;
    border-bottom: 1px solid #ccc;
    font-weight: normal;
    font-size: 11px;
    background-color: $background;
    background-image: linear-gradient(to bottom, lighten($background, 2%), darken($background, 2%));
    background-repeat: repeat-x;
    &.sort-ascend:after,
    &.sort-descend:after {
      content: '';
      display: block;
      position: absolute;
      top: 1px;
      left: 0;
      right: 0;
      margin-left: auto;
      margin-right: auto;
      border-color: #666 transparent;
      border-style: solid;
      height: 0;
      width: 0;
    }
    &.sort-ascend:after {
      border-width: 0 4px 4px 4px;
    }
    &.sort-descend:after {
      border-width: 4px 4px 0 4px;
    }
  }
  > tbody {
    > tr {
      > th,
      > td {
        border-top: 1px solid #eee;
      }
    }
  }
}
.table-container {
  position: relative;
  overflow-x: hidden;
  overflow-y: scroll;
  border: 1px solid #ccc;
  background-color: #fff;
}

// Search input field
.search-field {
  display: inline-block;
  position: relative;
  .form-control {
    padding-left: 20px;
  }
  .icon {
    position: absolute;
    top: 5px;
    left: 5px;
    opacity: 0.7;
  }
}

// Processing icon
@mixin icon-processing {
  display: inline-block;
  position: relative;
  top: 1px;
  width: 14px;
  height: 14px;
  border: 2px solid rgba(0, 0, 0, 0.2);
  border-left-color: #000;
  border-bottom-color: #000;
  border-radius: 50%;
  line-height: 1;
  vertical-align: text-top;
  animation: spin 1s infinite ease-out;
}
.icon-processing {
  @include icon-processing;
}
.icon-processing-white {
  @include icon-processing;
  border-color: rgba(255, 255, 255, 0.2);
  border-left-color: #fff;
  border-bottom-color: #fff;
}
@keyframes spin {
 0%   { transform: rotate(20deg);  }
 50%  { transform: rotate(50deg);  }
 100% { transform: rotate(740deg); }
}

// Overlay window
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  overflow: hidden;

  .overlay-content {
    position: absolute;
    top: 0;
    left: 15px;
    right: 15px;
    bottom: 20px;
    background-color: #f3f3f3;
    box-shadow: 0 4px 15px 0 rgba(0, 0, 0, 0.2), 0 1px 5px 1px rgba(0, 0, 0, 0.3);
  }

  // Animation
  .ng-enter & {
    .overlay-content {
      opacity: 0;
      transform: translateY(-40px) scale(0.96);
    }
  }
  .ng-enter-active & {
    .overlay-content {
      transition: 250ms ease-out all;
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  .ng-leave & {
    .overlay-content {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  .ng-leave-active & {
    .overlay-content {
      transition: 250ms ease-out all;
      opacity: 0;
      transform: translateY(-40px) scale(0.96);
    }
  }
}
// Trigger for animation
.overlay-view {
  &.ng-enter,
  &.ng-leave {
    transition: 250ms;
  }
}
